/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import DataIngestion.DBIntegrator;
import DataIngestion.IApiIntegrator;
import DataIngestion.MultiDrawIntegrator;
import java.awt.Cursor;
import java.awt.Dimension;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.TimeUnit;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import model.GameDrawResults;
import model.WinningColumn;

/**
 *
 * @author jkanaks
 */
public class DiplayDataByMonthFrame extends javax.swing.JFrame {

    private MenuOverlay menuOverlay = new MenuOverlay();
    private List<GameDrawResults> gameDrawResults;
    //List of API Responce for winning numbers
    private List<WinningColumn> winningColumns;

    /**
     * Creates new form NewJFrame
     */
    public DiplayDataByMonthFrame() {
        initComponents();
        setComboValues();
        progressBar.setVisible(false);
        JLblPayoutTitle.setHorizontalAlignment(JLabel.CENTER);
        JLblChartByMonthTitle.setHorizontalAlignment(JLabel.CENTER);
        __deletemejComboMonth.setVisible(false);
        _deletemejLabel5.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPnlTzokerDataPanel = new javax.swing.JPanel();
        JPnlChartByMonth = new javax.swing.JPanel();
        JPnlSelectYear = new javax.swing.JPanel();
        JLblYear = new javax.swing.JLabel();
        JCmbYear = new javax.swing.JComboBox<>();
        JLblFiller = new javax.swing.JLabel();
        JPnlGetAggregatedData = new javax.swing.JPanel();
        JLblExecuteIcon = new javax.swing.JLabel();
        JLblExecuteText = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        JLblTzakpotsTitle = new javax.swing.JLabel();
        JLblDraws = new javax.swing.JLabel();
        JLblDrawsTitle = new javax.swing.JLabel();
        JLblPayout = new javax.swing.JLabel();
        JLblPayoutTitle = new javax.swing.JLabel();
        JLblJackpots = new javax.swing.JLabel();
        JLblChartByMonthTitle = new javax.swing.JLabel();
        __deletemejComboMonth = new javax.swing.JComboBox<>();
        _deletemejLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JPnlTzokerDataPanel.setBackground(new java.awt.Color(190, 139, 6));
        JPnlTzokerDataPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        JPnlTzokerDataPanel.add(JPnlChartByMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 670, 170));

        JPnlSelectYear.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        JPnlSelectYear.setMinimumSize(new java.awt.Dimension(70, 55));
        JPnlSelectYear.setOpaque(false);
        JPnlSelectYear.setPreferredSize(new java.awt.Dimension(370, 55));

        JLblYear.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        JLblYear.setForeground(new java.awt.Color(255, 255, 255));
        JLblYear.setLabelFor(JCmbYear);
        JLblYear.setText("Έτος Κλήρωσης:");
        JLblYear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JLblYear.setPreferredSize(new java.awt.Dimension(90, 14));
        JPnlSelectYear.add(JLblYear);

        JCmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        JCmbYear.setMaximumSize(new java.awt.Dimension(56, 22));
        JCmbYear.setMinimumSize(new java.awt.Dimension(56, 22));
        JCmbYear.setPreferredSize(new java.awt.Dimension(65, 25));
        JPnlSelectYear.add(JCmbYear);

        JLblFiller.setPreferredSize(new java.awt.Dimension(50, 14));
        JLblFiller.setRequestFocusEnabled(false);
        JPnlSelectYear.add(JLblFiller);

        JPnlTzokerDataPanel.add(JPnlSelectYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 690, 60));

        JPnlGetAggregatedData.setBackground(new java.awt.Color(190, 139, 6));
        JPnlGetAggregatedData.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JPnlGetAggregatedData.setMinimumSize(new java.awt.Dimension(200, 55));
        JPnlGetAggregatedData.setPreferredSize(new java.awt.Dimension(200, 55));
        JPnlGetAggregatedData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JPnlGetAggregatedDataMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JPnlGetAggregatedDataMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                JPnlGetAggregatedDataMouseExited(evt);
            }
        });
        JPnlGetAggregatedData.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JLblExecuteIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLblExecuteIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/play3.png"))); // NOI18N
        JPnlGetAggregatedData.add(JLblExecuteIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 40, 50));

        JLblExecuteText.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JLblExecuteText.setForeground(new java.awt.Color(255, 255, 255));
        JLblExecuteText.setText("Εμφάνιση Αποτελεσμάτων");
        JPnlGetAggregatedData.add(JLblExecuteText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 170, 50));

        JPnlTzokerDataPanel.add(JPnlGetAggregatedData, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, -1));

        progressBar.setPreferredSize(new java.awt.Dimension(695, 15));
        JPnlTzokerDataPanel.add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 470, 700, 20));

        JLblTzakpotsTitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JLblTzakpotsTitle.setForeground(new java.awt.Color(255, 255, 255));
        JLblTzakpotsTitle.setText("Αριθμός ΤΖΑΚ-ΠΟΤ");
        JLblTzakpotsTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JPnlTzokerDataPanel.add(JLblTzakpotsTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 120, 30));

        JLblDraws.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        JLblDraws.setForeground(new java.awt.Color(51, 51, 51));
        JLblDraws.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLblDraws.setText("-");
        JLblDraws.setOpaque(true);
        JPnlTzokerDataPanel.add(JLblDraws, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 120, 110));

        JLblDrawsTitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JLblDrawsTitle.setForeground(new java.awt.Color(255, 255, 255));
        JLblDrawsTitle.setText("Αριθμός Κληρώσεων");
        JLblDrawsTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JPnlTzokerDataPanel.add(JLblDrawsTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 120, 30));

        JLblPayout.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        JLblPayout.setForeground(new java.awt.Color(51, 51, 51));
        JLblPayout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLblPayout.setText("-");
        JLblPayout.setOpaque(true);
        JPnlTzokerDataPanel.add(JLblPayout, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 380, 110));

        JLblPayoutTitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JLblPayoutTitle.setForeground(new java.awt.Color(255, 255, 255));
        JLblPayoutTitle.setText("Διανεμόμενα Κέρδη");
        JLblPayoutTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        JPnlTzokerDataPanel.add(JLblPayoutTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 380, 30));

        JLblJackpots.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        JLblJackpots.setForeground(new java.awt.Color(51, 51, 51));
        JLblJackpots.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLblJackpots.setText("-");
        JLblJackpots.setOpaque(true);
        JPnlTzokerDataPanel.add(JLblJackpots, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 150, 120, 110));

        JLblChartByMonthTitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JLblChartByMonthTitle.setForeground(new java.awt.Color(255, 255, 255));
        JLblChartByMonthTitle.setText("Κέρδη ανα Μήνα (Κλίκ για λεπτομέρειες)");
        JLblChartByMonthTitle.setFocusCycleRoot(true);
        JPnlTzokerDataPanel.add(JLblChartByMonthTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 262, 380, 30));

        __deletemejComboMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        __deletemejComboMonth.setMaximumSize(new java.awt.Dimension(56, 22));
        __deletemejComboMonth.setMinimumSize(new java.awt.Dimension(56, 22));
        __deletemejComboMonth.setOpaque(false);
        __deletemejComboMonth.setPreferredSize(new java.awt.Dimension(110, 25));
        JPnlTzokerDataPanel.add(__deletemejComboMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, -1, -1));

        _deletemejLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        _deletemejLabel5.setForeground(new java.awt.Color(255, 255, 255));
        _deletemejLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        _deletemejLabel5.setText("Μήνας Κλήρωσης:");
        _deletemejLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        _deletemejLabel5.setPreferredSize(new java.awt.Dimension(100, 14));
        JPnlTzokerDataPanel.add(_deletemejLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(JPnlTzokerDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPnlTzokerDataPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JPnlGetAggregatedDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JPnlGetAggregatedDataMouseClicked

        if (!JPnlGetAggregatedData.isEnabled()) {
            return;
        }
        menuOverlay.setEnabled(JPnlGetAggregatedData, false);
        startWaiting((JPanel) evt.getSource());
        SwingWorker<Void, Void> mySwingWorker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {

                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                int selectedYear = Integer.parseInt(String.valueOf(JCmbYear.getSelectedItem()));
                int selectedMonth = __deletemejComboMonth.getSelectedIndex();
                //Original Start Date
                String initFromDate = "1900-01-01";
                //Start and End dates used in loop
                String fromDate = "1900-01-01";
                String toDate = "1900-01-01";
                //Initialize calendar objects with the user selections
                Calendar cFrom = Calendar.getInstance();
                Calendar cCurrentTo = Calendar.getInstance();
                Calendar cTo = Calendar.getInstance();
                cFrom.set(selectedYear, selectedMonth, 1);
                int lastDayOfMonth = cFrom.getActualMaximum(Calendar.DATE);
                cFrom.set(selectedYear, selectedMonth, 1);
                cTo.set(selectedYear, 11, 31);
                cCurrentTo.set(selectedYear, selectedMonth, 15);
                //Keep the original starting date
                initFromDate = dateFormat.format(cFrom.getTime());

                try {
                    //Split to two calls in order to fetch all data!!
                    //Bug with the API (omits results while reurns stats code 200!!! when the date range is close to 30 days)
                    int LastApiCall = 0;
                    do {

                        if (cCurrentTo.getTime().after(cTo.getTime())) {
                            cCurrentTo.setTime(cTo.getTime());
                            LastApiCall = 1;
                        }   
                        
                        fromDate = dateFormat.format(cFrom.getTime());
                        toDate = dateFormat.format(cCurrentTo.getTime());

                        IApiIntegrator multiDrawIntegrator = new MultiDrawIntegrator();
                        multiDrawIntegrator.addAPIargument("gameID", "5104");
                        multiDrawIntegrator.addAPIargument("fromDate", fromDate);
                        multiDrawIntegrator.addAPIargument("toDate", toDate);
                        //Fetch data
                        multiDrawIntegrator.loadDataFromAPI();
                        List<GameDrawResults> gameDrawResults_Current = (List<GameDrawResults>) multiDrawIntegrator.getDataObject(GameDrawResults.class);
                        List<WinningColumn> winningColumns_Current = (List<WinningColumn>) multiDrawIntegrator.getDataObject(WinningColumn.class);

                        if (Objects.isNull(gameDrawResults)) {
                            gameDrawResults = (List<GameDrawResults>) multiDrawIntegrator.getDataObject(GameDrawResults.class);
                        } else {
                            //Append at the top to maintain table sorting on draw_id, Win Category
                            gameDrawResults.addAll(0, gameDrawResults_Current);
                        }
                        if (Objects.isNull(winningColumns)) {
                            winningColumns = (List<WinningColumn>) multiDrawIntegrator.getDataObject(WinningColumn.class);
                        } else {
                            //Append at the top to maintain sorting on draw_id
                            winningColumns.addAll(0, winningColumns_Current);
                        }
                        //cFrom.set(selectedYear, selectedMonth, 16);
                        //cTo.set(selectedYear, selectedMonth, lastDayOfMonth);
                        cFrom.add(Calendar.DATE, 15);
                        cCurrentTo.setTime(cFrom.getTime());
                        cCurrentTo.add(Calendar.DATE, 14);

                    }while ( LastApiCall == 0);
                    //Write to DB ONLY missing draw data
                    DBIntegrator.setDrawResults(winningColumns, gameDrawResults, DBIntegrator.Operation.FORCE_INSERT);
                    //fetch aggregated data
                    DBIntegrator.AggregatedDrawData aggregatedDrawData = DBIntegrator.getDataForMonth(5104, initFromDate, toDate);
                    
                    JLblDraws.setText(String.valueOf(aggregatedDrawData.getNumberOfDraws()));
                    JLblPayout.setText(String.format("%,.2f", aggregatedDrawData.getPayoutAmount()));
                    JLblJackpots.setText(String.valueOf(aggregatedDrawData.getNumberOfJackpots()));
                    //Show bar Chart for draws
                    JPnlChartByMonth.removeAll();
                    MonthsBarChart monthsBarChart = new MonthsBarChart(5104, initFromDate, toDate, String.valueOf(__deletemejComboMonth.getSelectedItem()), JPnlTzokerDataPanel);
                    monthsBarChart.setPreferredSize(new Dimension(700, 170));
                    JPnlChartByMonth.add(monthsBarChart);
                    JPnlChartByMonth.repaint();
                    JPnlChartByMonth.revalidate();                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Παρουσιάστηκε σφάλμα κατα την παρουσίαση των δεδομένων." + e.getMessage(),
                             "Παρουσίαση Δεδομένων", JOptionPane.ERROR_MESSAGE);
                    System.out.println(e);
                } finally {
                    //Restore initial UI status
                    stopWaiting();
                    menuOverlay.setEnabled((JPanel) evt.getSource(), true);
                }
                return null;
            }
        };
        mySwingWorker.execute();
    }//GEN-LAST:event_JPnlGetAggregatedDataMouseClicked

    private void JPnlGetAggregatedDataMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JPnlGetAggregatedDataMouseEntered
        menuOverlay.setHilighted((JPanel) evt.getSource(), true);
    }//GEN-LAST:event_JPnlGetAggregatedDataMouseEntered

    private void JPnlGetAggregatedDataMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JPnlGetAggregatedDataMouseExited
        menuOverlay.setHilighted((JPanel) evt.getSource(), false);
    }//GEN-LAST:event_JPnlGetAggregatedDataMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JCmbYear;
    private javax.swing.JLabel JLblChartByMonthTitle;
    private javax.swing.JLabel JLblDraws;
    private javax.swing.JLabel JLblDrawsTitle;
    private javax.swing.JLabel JLblExecuteIcon;
    private javax.swing.JLabel JLblExecuteText;
    private javax.swing.JLabel JLblFiller;
    private javax.swing.JLabel JLblJackpots;
    private javax.swing.JLabel JLblPayout;
    private javax.swing.JLabel JLblPayoutTitle;
    private javax.swing.JLabel JLblTzakpotsTitle;
    private javax.swing.JLabel JLblYear;
    private javax.swing.JPanel JPnlChartByMonth;
    private javax.swing.JPanel JPnlGetAggregatedData;
    private javax.swing.JPanel JPnlSelectYear;
    private javax.swing.JPanel JPnlTzokerDataPanel;
    private javax.swing.JComboBox<String> __deletemejComboMonth;
    private javax.swing.JLabel _deletemejLabel5;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables

    //Populate Year and month Comboboxes
    private void setComboValues() {

        this.JCmbYear.removeAllItems();
        this.__deletemejComboMonth.removeAllItems();

        for (int i = Calendar.getInstance().get(Calendar.YEAR); i >= 2000; i--) {
            this.JCmbYear.addItem(String.valueOf(i));
        }

        this.__deletemejComboMonth.addItem("Ιανουάριος");
        this.__deletemejComboMonth.addItem("Φεβρουάριος");
        this.__deletemejComboMonth.addItem("Μάρτιος");
        this.__deletemejComboMonth.addItem("Απρίλιος");
        this.__deletemejComboMonth.addItem("Μάιος");
        this.__deletemejComboMonth.addItem("Ιούνιος");
        this.__deletemejComboMonth.addItem("Ιούλιος");
        this.__deletemejComboMonth.addItem("Αύγουστος");
        this.__deletemejComboMonth.addItem("Σεπτέμβριος");
        this.__deletemejComboMonth.addItem("Οκτώβριος");
        this.__deletemejComboMonth.addItem("Νοέμβριος");
        this.__deletemejComboMonth.addItem("Δεκέμβριος");
    }

    private void startWaiting(JPanel panel) {
        progressBar.setVisible(true);
        progressBar.setIndeterminate(true);
        progressBar.setValue(100);
        JPnlTzokerDataPanel.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        panel.grabFocus();
    }

    private void stopWaiting() {
        JPnlTzokerDataPanel.setCursor(null); //turn off the wait cursor
        progressBar.setIndeterminate(false);
        progressBar.setVisible(false);
    }
  

}
